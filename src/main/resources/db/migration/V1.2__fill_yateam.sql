INSERT INTO practice(created_date, author, category_id, name, markdown)
VALUES
-- Аналитика
(NOW(), 'ЯКоманда', 1, 'Исследование рынка',
 '# Описание практики

Использование **ChatGPT** для получения списка
конкурентов и киллер-фичей перед стартом разработки продукта
на уже существующем рынке для того чтобы быстро оценить
дальнейшее направление исследования;
оценка размера команды

## Шаги достижения результата

- Сформулировать для ChatGPT тип разрабатываемого приложения
- Запросить списки компаний и киллер-фичи
- Запросить размер команды и ее стоимость

## Плюсы, минусы, важные особенности

### Плюсы

От сети можно добиться списка конкретных лидеров рынка. По крайней мере Greenhouse попал
Оценка команды валидна, но только от части.

### Минусы

- Сеть избегает любой конкретики. Например, при просьбе оценить стоимости компаний она выдала стандартный для себя
длиннопост о том что «конфиденциальная информация бла-бла, но вы можете поискать ее сами». Хотя для публичных компаний
эта информация не является конфиденциальной
- Не способна отвечать на многоплановые вопросы (в примере ниже, выдала список квалификаций, но совершенно забыла про их
квалификацию)
Ответы нестабильны. В первый заход в список компаний попал еще taleo, а во втором его уже не было. Тоже самое с
составом команды.

## Вывод

Не сильно отличается от ок, гугл, какой топ 10 продуктов talent acquisition в 2023
![meme](https://qph.cf2.quoracdn.net/main-qimg-b59f3802b4555e787dd6ba3a1e378491.webp "Meme")'),

-- Разработка
(NOW(), 'ЯКоманда', 2, 'Написание тестов на react компонент',
 '# Описание практики

Использование **ChatGPT** для написания `jest` тестов на react компонент.

## Шаги достижения результата

1. Сформулировать для ChatGPT задачу.
2. Передать код react компонента.
3. Получить код теста.
4. Провести несколько итераций вопрос-ответ с целью поправить тест.
5. Запушить полученный тест.

## Плюсы, минусы, важные особенности

### Плюсы

- Быстрый старт не с 0
- Дает рабочие подсказки по описанию ошибок.
### Минусы

Вероятность получить рабочий код из коробки крайне мала - код может
использовать не существующие функции, менять сигнатуру компонента.
Нужно задавать уточняющие вопросы.'),

-- Тестирование
(NOW(), 'ЯКоманда', 3, 'Составление автотестов по проверке заполнения полей',
 '# Описание практики

Использование **ChatGPT** для составления автотестов
по проверке заполнения полей с учетом
требований и необходимых тестовых данных.

## Шаги достижения результата

1. Сбор данных: Определить требования,
которые будут проверяться автотестами, язык программирования, библиотеку/и.
2. Подготовка запроса: Сформулировать запрос для ChatGPT, с указанием ЯП,
библиотек, требований, чтобы получить автотесты для проверки заполнения полей.
Например: “Автотестирование ПО. Язык программирования Java, библиотека TestNG.
Параметризация данных. Составь автотест по проверке длины поля
со следующим требованием: минимальная длина 1 символ, максимальная длина 100 символов.
Проверять допустимую и недопустимую длину, с учетом граничных значений.
Дополнительная информация: в значениях использовать только
допустимые символы: цифры, буквы русского и английского языка, спецсимволы,
БЕЗ пробелов в начале и в конце.
3. Использование ChatGPT: Воспользоваться ChatGPT для отправки подготовленного запроса и получения автотестов.
4. Анализ и корректировка: Проверить полученные автотесты на соответствие требованиям и,
при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
5. Использование результата: Добавить полученные автотесты
(с доработкой) в проект по автотестированию.

## Плюсы, минусы, важные особенности

### Плюсы

Сокращение времени на написание автотестов. При правильно составленном запросе - получение готового автотеста,
требующего небольшой доработки для включения в проект по автотестированию.

### Минусы

- Тестовые данные, предлагаемые в автотестах, не всегда соответствуют техникам тест-дизайна.
- При одновременном запросе нескольких автотестов (по разным требованиям) при формировании
тестовых данных для одного теста могут не учитываться остальные требования к тестовым данным.
- Требуется проверка достоверности кода, тестовых данных.'),

-- DevOps
(NOW(), 'ЯКоманда', 4, 'Генерация утилитных скриптов',
 '# Описание практики

Генерация скриптов, необходимых для повседневной работы.

## Шаги достижения результата

1. Сформулировать для ChatGPT задачу.
2. Получить bash скрипт.

## Плюсы, минусы, важные особенности

### Плюсы

Дает готовые к использованию скрипты.
'),

-- Документирование
(NOW(), 'ЯКоманда', 5, 'Разъяснение/описание метода/класса для комментирования кода',
 '# Описание практики

Использование ChatGPT для получения, дополненного пояснениями кода.

## Шаги достижения результата

1. Сформулировать для ChatGPT язык исходников.
2. Останавливаем пример его возможностей.
3. Передать код.
4. Получить готовый результат.
5. Проанализировать.
6. Обновить исходник.
7. По окончании - проверить, собрать, протестировать сохранить в гит.

## Плюсы, минусы, важные особенности

### Плюсы

- Оперативно документированный код

### Минусы

- Для документирования больших объемов кода потребуется разбивать на части,
так как есть ограничение на размер пересылаемых частей.
- Сливаем свои исходники
')
