INSERT INTO practice(created_date, author, category_id, name, link, description)
VALUES (NOW(), 'ГосНейроз', 2, 'Подбор названия метода в исходном коде',
        'https://docs.google.com/document/d/1czCTdJOk2eAotm83QJuhrDNKmqWGpZRo/edit', 'Использование ChatGPT при написании исходного кода для подбора названия метода на английском языке.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать название метода, основываясь на описании функциональности метода. Например: “Представь, что ты разработчик на Java. Придумай название для метода, который принимает на вход идентификатор задачи и список фраз, метод добавляет новые фразы в БД и привязывает идентификаторы задач к новым или уже имеющимся в БД”.

2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.

3. Анализ результата: Проверить предложенное название метода:
- Соответствует ли функциональности метода?
- Использует ли ранее принятые в коде термины?
- Соответствует ли соглашениям по разработке?

4. Корректировка: при необходимости, внести корректировки в название метода самостоятельно или уточнить запрос для ChatGPT, например: “Допустим мы не хотим отражать в методе, что он сохраняет именно в БД, просто метод делает какую-то бизнесовую задачу”.

5. Использование результата: назвать метод в исходном коде согласно полученному результату.'),
       (NOW(), 'ГосНейроз', 4, 'Написание Dockerfile',
        'https://docs.google.com/document/d/1zgvHhvxenX0XRDVhGVq4pftM3gnjS6F3lOFFnTufOZc/edit?usp=sharing', '1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать dockerfile. Например: “представь что ты DevOps инженер тебе нужно написать Dokerfile для приложения работающего на Tomcat9 с Java17 Temurin. Желательно java взять с сайта adoptium.net”.

2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.

3. Анализ результата:
- Удовлетворяет ли потребности?
- Собирается ли образ?

4. Корректировка: при необходимости, самостоятельно исправить Dockerfile, либо внести корректировку в запрос, например “Используй докер-образ alpine”.

5. Использование результата: собрать полученный Dockerfile с артефактом и задеплоить'),
       (NOW(), 'ГосНейроз', 5, 'Подготовка персонала: составление контрольного упражнения (теста)',
        'https://docs.google.com/document/d/1rMpsqSsAHWrPKnto3_EBoyxlwQ9yAt2ONfAq_7nviCI/edit?usp=sharing', 'При подготовке персонала требуется сформировать тест по материалам обучения, это от 10 до 20 вопросов с вариантами ответов. Придумывание вариантов ответов - нетривиальная задача. Цель практики - сгенерировать с помощью ChatGPT тест по исходным данным; оценить применимость теста, в том числе как будет описан правильный ответ, как будут сформулированы неправильные ответы.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст (текст, как правило, подготовлен в руководстве пользователя, текст всегда написан до подготовки персонала). Сформулировать запрос для ChatGPT, чтобы сгенерировать вопросы теста. Например: “по тексту об услуге заказ копий задай три вопроса на тест, каждый вопрос с тремя вариантами ответа, правильный один вариант”.

2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.

3. Анализ результата: Проверить предложенные вопросы теста:
- Заданы ли вопросы по смыслу?
- Как сформулирован правильный ответ?
- Как сформулированы неправильные ответы?

4. Корректировка: при необходимости, если какой-либо вопрос теста не устраивает, можно внести корректировки самостоятельно, или уточнить запрос для ChatGPT, или просто запросить генерацию новых вопросов.

5. Использование результата: выдать тесты на подготовке персонала.'),
       (NOW(), 'ГосНейроз', 2, 'Генерация русских названий таблиц и полей таблиц БД из DDL',
        'https://docs.google.com/document/d/1qjxpnQUzF1dDaQnL75hQ5pG-zd6PexXc/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'В нашем проекте для использования в документации необходимо иметь переведенные на русский язык названия таблиц и полей таблиц БД. Можно применить ChatGPT для локализации наименований таблиц и полей по уже имеющимся DDL.

Шаги достижения результата:
1. Сбор данных: подготовить DDL для таблиц которые необходимо локализовать.

2. Подготовка запроса: сформулировать запрос для ChatGPT, чтобы локализовать наименования из DDL скрипта и вывести это в табличном виде и в виде DDL скрипта для добавления комментариев к табилце. Например: “Привет. Представь что ты разработчик и тебе нужно локализовать описание таблиц в БД. Поможешь перевести на русский язык наименования таблиц и колонок? И выведи, пожалуйста, в табличном виде, первая колонка название колонки, вторая колонка - локализация на русском языке Есть такой DDL: ” и добавить DDL.

3. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса.

4. Анализ и корректировка: Проверить полученный результат локализации, при необходимости предложить поправить локализацию для каких-нибудь колонок и можно попросить запомнить такое наименование для последующих запросов с другими таблицами.

5. Использование результата: Используя полученные DDL скрипты можно применить их к БД или добавить в миграцию. Табличный вид в спецификацию.'),
       (NOW(), 'ГосНейроз', 5, 'Подготовка персонала: эмуляция пользовательских вопросов',
        'https://docs.google.com/document/d/1Sox9ONaWrZFky1UuT_LrSRCWUuukxp932361FdjFo6o/edit?usp=sharing', 'При подготовке персонала заранее предполагается, какие вопросы может задать пользователь, и в том числе в этом ключе готовится материал. Цель практики - получить от ChatGPT вопросы, которые ранее не предполагались, чтобы подготовиться по ним тоже; оценить применимость вопросов, которые будут сгенерированы.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст (текст, как правило, подготовлен в руководстве пользователя, текст всегда написан до подготовки персонала). Сформулировать запрос для ChatGPT, чтобы сгенерировать вопросы, указать, от чьего имени формулировать вопросы. Например: “представь, что ты сотрудник архива, который исполняет услугу заказ копий”, “задай три вопроса от имени пользователя, который хочет заказать услугу заказ копий”.

2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.

3. Анализ результата: Проверить предложенные вопросы:
- Заданы ли вопросы по смыслу?
- Применимы ли вопросы?
- Сформулированы ли вопросы только по предложенному тексту или дополнительно - по указанной теме и сверх предложенного текста?

4. Корректировка: при необходимости, если какой-либо вопрос не устраивает, можно уточнить запрос для ChatGPT (уточнить тему или уточнить, от чьего имени задается вопрос).

5. Использование результата: использовать предложенные вопросы при подготовке к обучению.'),
       (NOW(), 'ГосНейроз', 2, 'Выявление потенциальных проблемных мест в коде и рефакторинг',
        'https://docs.google.com/document/d/1K3Mt-zkY0xaVUpV1UrcVIsgitOQ3BmXd/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT при для выявления потенциальных проблемных мест в коде, а также получения исправленного кода. Может быть полезно как при разработке, так и при проведении код-ревью

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, указав контекст, запрос на обработку текста и свой исходный код . Например: “Представь, что ты проводишь код ревью. Тебе нужно найти  проблемные места в коде, непонятые, не соответствующие описанию  или приводящие к ошибкам”, далее указываем свой исходный код.

2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенных рекомендаций. Попросить ChatGPT отредактировать код согласно выданным им же рекомендациям.

3. Анализ результата: Проверить код на предмет применимости рекомендаций сформированных ChatGPT

4. Корректировка: При необходимости самостоятельно вносим корректировки в код, или дополняем запрос и возвращаемся к шагу 2.

5. Использование результата: Применить полученный в результате рефакторинга код, либо самостоятельно доработать код с учетом указанных ChatGPT проблемных мест.'),
       (NOW(), 'Hello_нейроWorld', 1, 'Практика №1',
        'https://docs.google.com/document/d/1mmvoRwkJ8xc6TIKP49Mdx8YsdSGdEmeM0HVet1rvvmw/edit', 'Описание практики: Использование ChatGPT для проектирования API по словесному описанию задачи
Шаги достижения результата:
1.     Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать методы, запросы и ответы для сервиса API
2.      Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения предложенного варианта
3.     Анализ результата: Проверить предложенный вариант методов, запросов/ответов API. Покрывает ли он нужные нам функции? Устраивают ли нас наименования параметров?
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: добавить в постановку проект API'),
       (NOW(), 'Hello_нейроWorld', 1, 'Практика №2',
        'https://docs.google.com/document/d/1cHA6rGWStn1VkDfy-bnppNHN7Ml8tMLZiQZ5vzwotvI/edit', 'Использование ChatGPT для составления списка валидации ошибок для сервиса API.
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать список валидации ошибок для сервиса API
2.       Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения списка валидации ошибок
3.       Анализ результата: Проверить предложенный вариант. Покрывает ли он все ошибки?
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: добавить в постановку список валидации ошибок'),
       (NOW(), 'Hello_нейроWorld', 1, 'Практика №3',
        'https://docs.google.com/document/d/1zULYoxy8YG9A4txFt0VXV9Bj7_uDMvgjpoPl8e8ns1M/edit', 'Использование ChatGPT для написания юзер-сторис
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать юзер-сторис
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения юзер-сторис
3.      Анализ результата: Проверить предложенный вариант юзер-сторис. Соответствуют ли они действительности? Подходят ли нам такие юзер-сторис
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: вдохновиться, более четко понять цели разработки, скорректировать постановку, если это необходимо'),
       (NOW(), 'Hello_нейроWorld', 1, 'Практика №4',
        'https://docs.google.com/document/d/1V7awBbQpCTA13ytSkfvKmxJ8xFJ59YJuBxZWcTzWjaU/edit', 'Использование ChatGPT для составления схемы БД для сервиса
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать схему БД
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения схемы БД
3.      Анализ результата: Проверить предложенный вариант схемы БД - все ли поля учтены, правильно ли расставлены связи
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: внести схему БД в постановку'),
       (NOW(), 'Hello_нейроWorld', 1, 'Практика №5',
        'https://docs.google.com/document/d/1YWE7eq0LqJtohmF0br6lF-AyARSLUIAqkfsgVOvPnOA/edit', 'Использование ChatGPT для составления диаграммы последовательностей
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать uml-код для диаграммы последовательностей
2.       Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения uml-кода
3.      Анализ результата: Проверить предложенный вариант uml-coda на онлайн-сервере-соответствует ли картинка действительности. Нужны ли изменения в формулировке задачи
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: внести схему диаграммы последовательностей в постановку'),
       (NOW(), 'Hello_нейроWorld', 5, 'Практика №1',
        'https://docs.google.com/document/d/1TLtCLAZvDnQzskWkR081vlSOYRgpgITR8oe6qK6TFhk/edit', 'Использование ChatGPT для написания руководства пользователя
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать руководство пользователя
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения руководства пользователя
3.      Анализ результата: Проверить предложенный вариант руководства пользователя, описывает ли оно функционал, можно ли с его помощью работать с функционалом
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: составить руководство пользователя на основе ответа нейросети'),
       (NOW(), 'Hello_нейроWorld', 2, 'Практика №1',
        'https://docs.google.com/document/d/1PJA1hJtoPcIVa5mB9wWx6EIzkrv29RJsW36vjktskoE/edit', 'создание индексов в БД на основе DDL и используемых запросов

Шаги достижения результата:
1. Сбор данных: формируем DDL БД и SQL запросы
2. Подготовка запроса: передаем в chatGPT эту информацию и просим создать индексы
3. Анализ результата: смотрим на предложенный результат, при необходимости уточняем запрос: например, частота вызовов запросов, количество данных в БД, для которых используются индексы
4. Использование результата: добавляем предложенные индексы в БД'),
       (NOW(), 'Hello_нейроWorld', 2, 'Практика №2',
        'https://docs.google.com/document/d/12eIsWC1VovdRrL4akizhZt-AC4a-aFQN-_r05zSDASc/edit', 'оптимизация графа зависимостей в файле build.gradle

Шаги достижения результата:
1. Сбор данных: формируем в build.gralde список зависимостей, необходимых для успешной сборки проекта
2. Подготовка запроса: передаем в chatGPT этот список и просим его оптимизировать
3. Анализ результата: смотрим на предложенный результат, версии зависимостей, проверяем, что они корректные, добавляем предложенные зависимости в build.gradle и проверяем, что проект собирается и функционирует
4. Использование результата: используем предложенные зависимости в build.gradle'),
       (NOW(), 'Hello_нейроWorld', 2, 'Практика №3',
        'https://docs.google.com/document/d/12eIsWC1VovdRrL4akizhZt-AC4a-aFQN-_r05zSDASc/edit', 'оптимизация графа зависимостей в файле build.gradle

Шаги достижения результата:
1. Сбор данных: формируем в build.gralde список зависимостей, необходимых для успешной сборки проекта
2. Подготовка запроса: передаем в chatGPT этот список и просим его оптимизировать
3. Анализ результата: смотрим на предложенный результат, версии зависимостей, проверяем, что они корректные, добавляем предложенные зависимости в build.gradle и проверяем, что проект собирается и функционирует
4. Использование результата: используем предложенные зависимости в build.gradle'),
       (NOW(), 'Hello_нейроWorld', 3, 'Практика №1',
        'https://docs.google.com/document/d/1Sud9lecALW9M6mgblQ0tySUigAP2QrVL45h72TLTr0I/edit', 'Использование ChatGPT при создании матрицы комбинаций параметров для попарного тестирования
Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать матрицу комбинаций параметров
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения предложенного варианта
3.       Анализ результата: Проверить предложенный вариант матрицы.
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: осуществить тестирование по сгенерированной матрице комбинаций'),
       (NOW(), 'НейроNetки', 4, 'Генерация Dockerfile с использованием ChatGPT',
        'https://docs.google.com/document/d/18PoqLJUW1SyOURM9Gc56aWuM7PB1wzDYrN1JtZcBnpw/edit?usp=sharing', 'Использование ChatGPT для генерации Dockerfile
Шаги достижения результата:
1.  Определение требуемых приложений, их стэк технологий
2. Формирование контекста взаимодействия с ChatGPT, описание ей требуемых приложений
3. Генерация Dockerfile''а по сформированному контексту
4. Валидация полученного результата и корректировка (добавление параметров лимитов, названия приложения и т.д.)
5. Скопировать полученные докерфайлы в репозитории приложений
6. Использовать докерфайлы для контейнеризации приложений с целью их последующего деплоя
Плюсы, минусы, важные особенности:
Хорошо справляется, получается рабочая рыба, а может и не рыба, но уже готовый код для интеграции в CI/CD проекта'),
       (NOW(), 'НейроNetки', 4, 'Рекомендации ChatGpt по инфраструктурным решениям',
        'https://docs.google.com/document/d/1B6gLvtKCc9-p0F9jAHUhCZwBXxbF6aQFsjV8kiE4yIY/edit?usp=sharing', 'Использование ChatGPT для формирования рекомендаций по инфраструктурным решениям в контексте Яндекс.Облака

Шаги достижения результата:
1.  Определение целевого облачного провайдера
2. Формирование контекста взаимодействия с ChatGPT, описание ей требуемых приложений
3. Генерация вопросов, как если бы я задавал их живому специалисту
4. Валидация полученного результата
5. Применение полученных рекомендаций

Плюсы, минусы, важные особенности:
Отсутствует необходимость искать по доке провайдера и самостоятельно вычленять информацию,
        необходимую для принятия решения по инфре. В целом, если постараться, можно даже не ходить в официальную доку,
        разве что только чтобы удостовериться в качестве и полноте ответов ChatGPT'),
       (NOW(), 'НейроNetки', 2, 'Генерация и определение структуры таблиц для базы данных.',
        'https://docs.google.com/document/d/1dzsUoungYWt1yr7vffdTVR5CReFiEc3eH2UstAPGj9g/edit#heading=h.4bu4z72jz2rz', 'Использование ChatGPT для генерации и определении структуры таблиц для базы данных.

Шаги достижения результата:
    1. Сбор данных: Используя список требований подготовить запросы для ChatGPT.
    2. Подготовка запроса: Сформулировать вопросы или инструкции для ChatGPT, чтобы определить и сгенерировать структуру таблиц.
    3. Использование ChatGPT: Воспользоваться API ChatGPT для отправки подготовленных запросов.
    4. Анализ и корректировка: Проверить полученные структуры таблиц на соответствие требованиям и, при необходимости,
        внести корректировки или задать более точные запросы для ChatGPT.
    5. Использование результата: Скопировать полученный код для генерации таблиц и создать в БД эту структуру.

Плюсы, минусы, важные особенности:
Сокращает время и ресурсы при генерации и определении структур таблиц для БД.'),
       (NOW(), 'НейроNetки', 2, 'Генерации SQL-запросов.',
        'https://docs.google.com/document/d/1F92xZNdze3UxrGdnbab1vm04p4pAplE_LNkzmaiKMsI/edit', 'Использование ChatGPT для генерации SQL-запросов.2

Шаги достижения результата:
    1. Сбор данных: Используя список требований подготовить запросы для ChatGPT.
    2. Подготовка запроса: Сформулировать вопросы или инструкции для ChatGPT, чтобы сгенерировать SQL-запрос.
    3. Использование ChatGPT: Воспользоваться API ChatGPT для отправки подготовленных запросов.
    4. Анализ и корректировка: Проверить полученные SQL-запрос на соответствие требованиям и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
    5. Использование результата: Скопировать полученный код для выполнения SQL-запросов.

Плюсы, минусы, важные особенности:
Сокращает время и ресурсы при генерации любых SQL-запросов.'),
       (NOW(), 'НейроNetки', 2, 'Генерации React компонентов.',
        'https://docs.google.com/document/d/1xneZuHlzWvfGe-RW0n66RjTkxAkyDcAwLI9oT5Usmwk/edit', 'Использование ChatGPT для генерации React компонентов.

Шаги достижения результата:
    1. Сбор данных: Используя список требований подготовить запросы для ChatGPT.
    2. Подготовка запроса: Сформулировать вопросы или инструкции для ChatGPT, чтобы сгенерировать React компонент.
    3. Использование ChatGPT: Воспользоваться API ChatGPT для отправки подготовленных запросов.
    4. Анализ и корректировка: Проверить полученные React компоненты на соответствие требованиям и, при необходимости,
        внести корректировки или задать более точные запросы для ChatGPT.
    5. Использование результата: Скопировать полученный код для создания React компонента в системе.

Плюсы, минусы, важные особенности:
Сокращает время и ресурсы при генерации React компонентов.'),
       (NOW(), 'НейроNetки', 2, 'Замена компонентов на styled компоненты.  ',
        'https://docs.google.com/document/d/1iXa-a5-LavnUzwYWqjQmSW9QygSwwlDca-4ESr24C8Y/edit', 'Использование ChatGPT для замены компонентов на styled компоненты.

Шаги достижения результата:
    1. Подготовка запроса: Сформулировать вопросы или инструкции для ChatGPT, чтобы сгенерировать запрос для замены компонентов на styled компоненты.
    2. Использование ChatGPT: Воспользоваться API ChatGPT для отправки подготовленных запросов.
    3. Анализ и корректировка: Проверить полученные компоненты и ввести корректировки если нужно.
    4. Использование результата: Скопировать полученный код для замены React компонента в системе.

Плюсы, минусы, важные особенности:
Сокращает время и ресурсы при замене компонентов на styled компоненты. Увеличивает производительность компонентов.'),
       (NOW(), 'НейроNetки', 2, 'Оптимизация React компонентов.',
        'https://docs.google.com/document/d/1xFTp909wIu3XH9ShEpwJc95ys4JkkIzKgK3oZgelzQ8/edit', 'Использование ChatGPT для оптимизации React компонентов.

Шаги достижения результата:
    1. Подготовка запроса: Сформулировать вопросы или инструкции для ChatGPT, чтобы сгенерировать запрос для оптимизации React компонентов.
    2. Использование ChatGPT: Воспользоваться API ChatGPT для отправки подготовленных запросов.
    3. Анализ и корректировка: Проверить полученные компоненты и ввести корректировки если нужно.
    4. Использование результата: Скопировать полученный код для обновления React компонента в системе.

Плюсы, минусы, важные особенности:
Увеличивает производительность компонентов.'),
       (NOW(), 'НейроNetки', 3,
        'Использование ChatGPT в ручном тестировании: API запрос на получение сообщений ленты событий',
        'https://docs.google.com/document/d/1beiw6OcSY2CZxGEad8cZkM1bH46sdGoJZZHyU0DIvAU/edit', 'Использование ChatGPT в тестировании API виджета «Лента событий». Формирование  json в body при помощи искусственного интеллекта

Шаги достижения результата:
  1.  После чтения требований сформулировать запрос для chatGPT.
  2. Отправить сформулированный запрос в chatGPT и получить ответ.
  3. Полученный json проверить, отправив запрос через Postman.

Плюсы, минусы, важные особенности:
Плюсы  - сокращается время, исключаются опечатки/ошибки в синтаксисе.
Минусы – необходимость валидировать результат и, в некоторых случаях, дорабатывать руками json, полученный от ChatGPT.'),
       (NOW(), 'НейроNetки', 3, 'Использование ChatGPT в ручном тестировании: тестовые случаи и тестовые данные',
        'https://docs.google.com/document/d/1JQ4RTPyWzuROTftX9E6_76o3p4lnXz08YSKaCTxPExI/edit', 'При помощи ChatGPT сгенерировать тестовые случаи и тестовые данные из требований,
        чтобы использовать их потом в ручном тестировании.

Шаги достижения результата:
  1.  После чтения требований сформулировать запрос для chatGPT.
  2. Отправить сформулированный запрос в chatGPT и получить ответ.
  3. Генерация тестовых данных для одного из полей.

Плюсы, минусы, важные особенности:
Плюсы  - сокращение времени ручного тестирования.
Минусы – необходимость валидировать результат, полученный от ChatGPT (например, избыточное тестирование, тестирование отсутствующего функционала)'),
       (NOW(), 'Hello_нейроWorld', 2, '',
        'https://docs.google.com/document/d/1IGYxw2j8-IqKMRSm_7bHST1Wa2e06XbBjoVMNcgwVAY/edit', 'Декомпозиция методов на составные части с помощью ChatGPT

Шаги достижения результата
1. Сбор данных: готовим метод или набор методов, которые потенциально подлежат декомпозиции на более простые составляющие
2. Подготовка запроса: передаем в ChatGPT эти методы и просим его декомпозировать
3. Анализ результата: смотрим на предложенный результат, проверяем, что логика не нарушена, декомпозиция осуществлена,
        наименования корректные. При необходимости корректируем контекст для ChatGPT
4. Использование результата: используем предложенный код в своем проекте'),
       (NOW(), 'НейроNetки', 4, 'Генерация конфигураций Kubernetes с использованием ChatGpt',
        'https://docs.google.com/document/d/17UyOMAe3SdLQIzdVuNgExnVNn24ZKTKSpTP9s7A0lgQ/edit?usp=sharing', 'При помощи ChatGPT сгенерировать конфигурационные файлы,
        необходимые Kubernetes.

Шаги достижения результата:
  1. Определение необходимого и достаточного набора конфигураций k8s для работы с приложениями
  2. Формирование контекста взаимодействия с ChatGPT, описание ей требуемых приложений
  3. Генерация конфигурационных файлов
 4. Валидация полученного результата и уточнение по необходимости
 5. Применение полученных конфигов

Плюсы, минусы, важные особенности:
Конфиги есть, детализировать можно сколько требуется'),
       (NOW(), 'НейроNetки', 3, 'Использование ChatGPT в ручном тестировании: оценка тестового покрытия.',
        'https://docs.google.com/document/d/12JfLehPIdZ4E6a8rLMfKRJV_hqtM8g9mjdgPrJFpYn4/edit', 'При помощи ChatGPT оценить покрытие тестирования сгенерированными тестовыми случаями из практики 2. Тестовое покрытие рассчитывается по формуле “Тестовое Покрытие=(Количество требований, проверяемых текст кейсами / Общее количество требований)*100%.”

Шаги достижения результата:
1.  Из готового наборы тестовых случаев и требований сформулировать запрос для chatGPT для оценки тестового покрытия.
2. Отправить сформулированный запрос в chatGPT и получить ответ.
3. Проанализировать полученный результат, при необходимости откорректировать набор тестовых случаев.

Плюсы, минусы, важные особенности:
Плюсы  - может сократить время ручного тестирования, быстро посчитать оценку тестового покрытия.
Минусы – необходимость четкой формулировки запроса и  валидация результата, полученного от ChatGPT (проверка ответа)'),
       (NOW(), 'ГосНейроз', 3, 'Генерация unit-тестов для регулярного выражения',
        'https://docs.google.com/document/d/1HojpZQYtMaMg37muu1lTlTonllQ2LUfE/edit#heading=h.2et92p0', 'При рефакторинге используемого в проекте сложного регулярного выражения в удобно иметь тесты для контроля его корректности. ChatGPT можно использовать для автоматической генерации регрессионных unit-тестов регулярного выражения.

Шаги достижения результата:
1. Сбор данных:  Подготовить регулярное выражение.
2. Использование ChatGPT: Сформировать запрос для ChatGPT.
3. Анализ результата: Проверить сгенерированный код на валидность путем его исполнения, оценить качество кода.
4. Корректировка: При необходимости самостоятельно вносим корректировки в код, или дополняем запрос и возвращаемся к шагу 2.
5. Использование результата: Добавить в проект полученные unit-тесты. Считаем, что тестируемое регулярное выражение находится в публичной константе.'),
       (NOW(), 'НейроNetки', 4, 'Генерация конфигураций Terraform с использованием ChatGpt',
        'https://docs.google.com/document/d/1wquZsHil2aN9E6Ye1oPvKL_ERcIcVesoQTqjb4CD-GU/edit?usp=sharing', 'При помощи ChatGPT сгенерировать конфигурационные файлы,
        необходимые Terraform.

Шаги достижения результата:
  1. Определение необходимого и достаточного набора конфигураций для инициализации инфраструктуры
  2. Формирование контекста взаимодействия с ChatGPT, описание ей требуемой инфраструктуры
  3. Генерация конфигурационных файлов
 4. Валидация полученного результата и уточнение по необходимости
 5. Применение полученных конфигов

Плюсы, минусы, важные особенности:
Конфиги есть, детализировать можно сколько требуется'),
       (NOW(), 'НейроNetки', 4, 'Генерация конфигураций GitLab CI/CD с использованием ChatGpt',
        'https://docs.google.com/document/d/1vPvc4XZk6r9PoPaYiEos_EPMHEI1cl1ITLd9bOx1Ozo/edit?usp=sharing', 'С учетом готового контекста (на базе предыдущих практик) используемых инструментов инфраструктуры и приложений,
        запрашивал YAML файлы для описания GitLab CI/CD

Шаги достижения результата:
  1. Проверьте, а гитлаб ли вы используете
  2. Формирование контекста взаимодействия с ChatGPT, описание ей требуемой инфраструктуры и приложений
  3. Генерация YAML файлов
 4. Валидация полученного результата и уточнение по необходимости
 5. Применение полученных файлов

Плюсы, минусы, важные особенности:
Оно есть, оно детально, оно интересно'),
       (NOW(), 'ГосНейроз', 5,
        'Подготовка текстов разной стилистики: адаптация текста из руководства пользователя к публикации на Портале и, наоборот, формализация текста',
        'https://docs.google.com/document/d/16X4cOFDRsVhKzmXlkti7PTHgm8kKt5f9tzh0bH3Xfv4/edit?usp=sharing', 'В руководстве пользователя применяется стилистика технической документации. При описании услуг или публикации объявлений / новостей для пользователей Портала требуется более дружелюбный стиль. И наоборот. Цель практики - посмотреть варианты улучшения текста / изменения стилей текста и т.п.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст (текст, как правило, подготовлен в руководстве пользователя). Сформулировать запрос для ChatGPT,
        например, для улучшения текста, или для публикации текста на Портале.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить сгенерированный / улучшенный текст: подходит ли смысловое содержание и стилистика?
4. Корректировка: при необходимости можно внести корректировки самостоятельно или уточнить запрос для ChatGPT (улучшить текст, уточнить тему, уточнить, от чьего имени пишется текст).
5. Использование результата: использовать текст для публикации.'),
       (NOW(), 'ГосНейроз', 5, 'Составление шаблона текста: составление пользовательского соглашения',
        'https://docs.google.com/document/d/1bqXH1cr6bbwPR_9kZorXnFUhhhBgHelFxlB6zNa1zvY/edit?usp=sharing', 'Требуется составить шаблон формализованного текста. В практике - шаблон пользовательского соглашения по платным услугам. Можно сделать на основе готовых примеров,
        можно запросить у ChatGPT. Эти способы дополняют друг друга. Цель практики - запросить подобный формализованный текст у ChatGPT.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, подробно описав цель и назначение текста, который требуется сгенерировать (см. пример).
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить сгенерированный / улучшенный текст:
- Подходит ли смысловое содержание и стилистика?
- Все ли требуемые моменты учтены?
4. Корректировка: при необходимости можно внести корректировки самостоятельно или уточнить запрос для ChatGPT (улучшить текст, уточнить ряд моментов, уточнить, от чьего имени пишется текст, конкретизировать назначение).
5. Использование результата: использовать сгенерированный текст, комбинируя его с другими формулировками.'),
       (NOW(), 'Hello_нейроWorld', 2, 'создание компонента React ',
        'https://docs.google.com/document/d/1u4Z0j2GxFjSZasNwtcYnMScT4OZLjouqF1_7qFYlx0Y/edit#heading=h.j0orl3a4x4hn', 'Шаги достижения результата
1.Сбор данных: формируем требования для компонента(что за компонент, что должен делать, какие библиотеки использует и так далее)
2. Подготовка запроса: передаем в ChatGPT запрос
3. Анализ результата: смотрим на предложенный результат,
        анализируем 4. Корректировка:  вводим уточняющие требования к компоненту, если хочется что-то подправить
5. Использование результата: используем предложенный компонент как заготовку для будущего компонента '),
       (NOW(), 'Hello_нейроWorld', 3, 'генерация тестовых данных ',
        'https://docs.google.com/document/d/1wNNQz_nyPPVzrstVVgeGsfNMaDSTz8Vq-TLji9qCQNo/edit', 'Шаги достижения результата
1. Сбор данных: формируем требования для данных( в каком виде нужны данные, какие поля и так далее)
2. Подготовка запроса: передаем в ChatGPT запрос
3. Анализ результата: смотрим на предложенный результат,
        анализируем 4. Корректировка:  вводим уточняющие требования к данным, если хочется что-то подправить
5. Использование результата: используем данные для проверки нужного функционала'),
       (NOW(), 'НейроNetки', 5, 'Документирование разработанной функциональности',
        'https://docs.google.com/document/d/1cGwzc5NcWm40t55iBC_NfaxwZlColXGwoSndn6oFYgA/edit?usp=share_link', 'Использование ChatGPT для документирования разработанной функциональности в пользовательской документации проекта (Руководстве пользователя).

Шаги достижения результата:
1. Формирование контекста: общая информация для ChatGPT - описание системы/модуля разработанной фичи,
        необходимой терминологии, принятой и используемой в документации, и т.д.
2. Запрос: описание разработанной фичи для ChatGPT (адаптированный description из Jira issue).
3. Получение результата: анализ полученного от ChatGPT описания.
4. Корректировка: уточнение задачи для ChatGPT по результатам предыдущего шага.
5. Использование: оформление описания функциональности от ChatGPT для использования в Руководстве пользователя.'),
       (NOW(), 'НейроNetки', 5, 'Документирование API',
        'https://docs.google.com/document/d/1vpElsiPq8gBQuwTapeoFwvRPXSQSD598J684wBTuFss/edit?usp=share_link', 'Использование ChatGPT для документирования работы с API методами в формате Руководства пользователя/системного администратора.

Шаги достижения результата
1. Запрос: общая информация по системе, сервису, использующему API, и запрос на документирование работы с методом API.
2. Получение результата: анализ полученного от ChatGPT описания работы с методом.
3. Корректировка: уточнение/дополнение задачи для ChatGPT по результатам предыдущего шага.
4. Использование: использование полученных результатов для составления Руководства пользователя.'),
       (NOW(), 'НейроNetки', 5, 'Генерация материалов для использования в отчетной документации',
        'https://docs.google.com/document/d/1Wtu8Am0l3ks-SHeMo9IqvI3NtBLeop78SKJbUfjYQr8/edit?usp=share_link', 'Генерация при помощи ChatGPT примеров наполнения баз данных для использования в отчетном документе “Депонируемые материалы базы данных”.

Шаги достижения результата:
1. Запрос: запрос на создание примера наполнения таблицы заданной структуры (достаточно скопипастить структуру из ворда).
2. Получение результата: анализ полученного от ChatGPT примера наполнения таблицы.
3. Корректировка: уточнение задачи для ChatGPT по результатам предыдущего шага (по структуре или по наполнению).
4. Использование: использование полученных результатов в отчетном документе.'),
       (NOW(), 'НейроNetки', 5, 'Генерация инструкций в поддержку отчетной документации',
        'https://docs.google.com/document/d/1_kdts6irIdMt_Fz-z2kFGm8K6J0KJjK4ZwlYxZnpJCY/edit?usp=share_link', 'Генерация при помощи ChatGPT инструкций для пользователей/администраторов для поддержки процессов сдачи проекта,
        в том числе на демонстрациях разработанного функционала, в приложения к документам (при отсутствии необходимости написания инструкций по ГОСТу).

Шаги достижения результата:
1. Запрос: запрос на создание инструкции с краткой характеристикой ожидаемого результата.
2. Получение результата: анализ полученной от ChatGPT инструкции.
3. Корректировка: уточнение задачи для ChatGPT по результатам предыдущего шага.
4. Использование: использование полученных результатов в отчетном документе.'),
       (NOW(), 'НейроNetки', 5, 'Генерация описаний функциональностей для использования в отчетной документации',
        'https://docs.google.com/document/d/1sLnTRTbS7pDx7WqDbd6jCbfoxsnczyBC-WJDbKPkYRk/edit?usp=share_link', 'Генерация при помощи ChatGPT описаний разработанных функций для использования в отчетном документе “Пояснительная записка”.

Шаги достижения результата:
1. Запрос: подробный запрос на генерацию описания функции с заданием: формата изложения (документ по ГОСТу, необходимо придерживаться определенной стилистики),
        примера стиля изложения, описания системы/модуля в целом, требований(копипастом из ТЗ/спецификации).
2. Получение результата: анализ полученного от ChatGPT описания.
3. Корректировка: итеративная корректировка до получения необходимого результата, получение различных вариаций описания.
4. Использование: использование полученных результатов в отчетном документе, в том числе, комбинируя разные предложенные нейросетью варианты.'),
       (NOW(), 'НейроNetки', 3, 'Использование ChatGPT в ручном тестировании: схема состояний и переходов.',
        'https://docs.google.com/document/d/1UNpmiXeZA-x5VYWJgmpp0CL3GfJ5cd_T8yRw3dvprjQ/edit', 'Генерация схемы состояний и переходов при помощи ChatGPT для визуализации требований и понимания охвата проверок

Шаги достижения результата:
1.  Сформулировать из требований запрос для ChatGPT для раздела “Активация пользователя”
2. Отправить сформулированный запрос в chatGPT и получить ответ.
3. Проанализировать полученный результат, при необходимости откорректировать схему состояний и переходов.

Плюсы, минусы, важные особенности:
Плюсы  - быстрая визуализация требований и, возможно, заполнение “белых пятен” в списке тестовых случаев, составленных при ручном тестировании.
Минусы – необходимость четкой формулировки запроса и  валидация результата, полученного от ChatGPT (не полное чтение требований, например).'),
       (NOW(), 'НейроNetки', 3, 'Использование ChatGPT в ручном тестировании: попарное тестирование.',
        'https://docs.google.com/document/d/1OEvoHdA8FfsKdLV3jDgx_aiXqUkYrHzAxsXvyYMPhGA/edit', 'Генерация списка проверок методом попарного тестирования при помощи ChatGPT для проверки области поиска и фильтрации в модуле “Библиотека материалов”.

Шаги достижения результата:
1.  Сформулировать из требований запрос для ChatGPT для проверки методом попарного тестирования области поиска и фильтрации в модуле “Библиотека материалов”.
2. Отправить сформулированный запрос в chatGPT и получить ответ.
3. Проанализировать полученный результат списка проверок.

Плюсы, минусы, важные особенности:
Плюсы - сокращает время ручного тестирования.
Минусы – необходимость четкой формулировки запроса и валидация результата, полученного от ChatGPT (не полное чтение игнорирование требований для генерации проверок, например).'),
       (NOW(), 'Hello_нейроWorld', 3, 'Практика №2
Использование Notion для создания чек-листов по требованиям ',
        'https://docs.google.com/document/d/18kvvNONN6NrRged4Iwfw4oG7l6cHLju_lfJ_WxL5ssY/edit', 'В Notion можно загрузить,
        например, список требований и преобразовать его в различные виды:
To-do list
Bulleted list
Numbered list
Toggle list
Quote
Callout
Columns
Code (возможность преобразования в различные языки, в том числе в json)
Pages и др
Шаги достижения результата:
1.       Создать новую страницу в Notion, например, “КЗД.Требования ГК 2021”
2.        В пустом месте под названием нажать пробел и ввести запрос: “Создай список требований: [скопировать текст требований]”
3.       Анализ результата: Проверить предложенный список
4.       Корректировка: при необходимости, ввести более конкретный запрос либо внести изменения в предложенный список самостоятельно (это НЕ чат, поэтому предыдущий запрос не остается)
5.       Использование результата: далее преобразовываем полученный результат целиком, выделив все пункты, либо по необходимости назначить каждому пункту требуемый вид'),
       (NOW(), 'Hello_нейроWorld', 3, 'Практика №3
Использование ChatGPT для создания списка проверок Критического пути по описанному функционалу ',
        'https://docs.google.com/document/d/1DNzGkfyYZi3bh-OolbpxJFsh3mF8w7TStl3_-8LWxX4/edit', 'Мы можем загрузить в ChatGPT описание функциональности или список требований к модулю / части модуля и попросить его сгенерировать Критический путь для проверки.

Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать список тестовых случаев по интересующему функционалу
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения предложенного варианта
3.       Анализ результата: Проверить предложенный список проверок
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Использование результата: осуществить тестирование по сгенерированному списку'),
       (NOW(), 'ГосНейроз', 1, 'Формирование бизнес-метрик по существующему функционалу',
        'https://docs.google.com/document/d/1X-YkvH4YePCcqrZBl-ncshkCM6fuzCcE/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT для определения бизнес-метрик которые необходимо собирать по реализованному функционалу.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать бизнес-метрики,
        которые необходимо собирать основываясь на описании функционала. Например: “Представь, что ты системный аналитик в разработке ПО. Существует веб-сайт библиотеки. Пользователи могут подать заявку на регистрацию в читальном зале через сайт.Сотрудник библиотеки может отклонить или одобрить эту заявку. Регистрация действует один год. По прошествии года пользователь должен перерегистрироваться. Какие бизнес-метрики можно собирать по данному функционалу?”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить предложенные бизнес-метрики
4. Корректировка: при необходимости, если какая-либо метрика не устраивает, внести корректировки самостоятельно,
        или уточнить запрос для ChatGPT, или запросить генерацию новых метрик.
5. Использование результата: создать спецификацию на основе предложенных метрик, использовать получаемые данные для улучшения системы/функционала.'),
       (NOW(), 'ГосНейроз', 1, 'Формирование плана испытаний продукта по его спецификации',
        'https://docs.google.com/document/d/17yt1trmtg1Trj9G3-wVpdDGOY-AoUxp-/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT для создания программы испытаний по спецификации.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст спецификации (текст всегда написан до проведения испытаний). Сформулировать запрос для ChatGPT,
        чтобы сгенерировать программу испытаний. Например: “Представь, что ты системный аналитик в разработке ПО. Сформулируй краткую программу испытаний функционала по спецификации”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить предложенную программу испытаний
4. Корректировка: при необходимости,
        внести корректировки в предложенную программу испытаний самостоятельно или уточнить запрос для ChatGPT,
        например: “Опиши программу в формате действие:.. и результат:...”.
5. Использование результата: перенести полученный результат в табличном формате в документ ПМИ.'),
       (NOW(), 'ГосНейроз', 2, 'Генерация SQL-запроса на обновление сущности по уже имеющемуся запросу на вставку',
        'https://docs.google.com/document/d/1i9Xu7YzBxo2x5y3vEuZmb01xap7ZWbbE/edit?usp=share_link&rtpof=true&sd=true', 'Использование ChatGPT для генерации SQL-скрипта для обновления сущности на основе SQL-скрипта вставки.

Шаги достижения результата:
1. Сбор данных: пишем новый DAO для какой-то сущности,
        создаем метод по вставке данных в БД. С помощью IntelliJ IDEA очень легко сгенерировать запрос на INSERT,
        поэтому тут проблем нет, а вот далее надо руками написать запрос на UPDATE, тут нам и поможет
 ChatGPT. Для следующего шага берем готовый запрос на INSERT.
2. Подготовка запроса: сформулировать запрос для ChatGPT,
        чтобы получить готовый запрос на обновление сущности в БД. Например: “Привет,
        считай что ты java разработчик и пишешь методы для DAO слоя с помощью JdbcTemplate. У тебя уже есть SQL запрос на вставку данных в таблицу БД,
        из него тебе надо сформировать запрос на обновление данных в таблиц. Вот запрос …”
3. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса.
4. Анализ и корректировка: Получить результат, оценить его актуальность. Если всё ОК, выполняем следующий шаг, если нет - можно попросить ChatGPT скорректировать результат.
5. Использование результата: Копируем запрос в метод обновления сущности.'),
       (NOW(), 'НейроNetки', 1, 'Requirements summary',
        'https://docs.google.com/document/d/1W5XyrdzzX2buK7VPfVtc83C2te04IYnGmWwTlQVkSvw/edit?usp=sharing', 'Использование ChatGPT для выделения главного из текста требований.

Шаги достижения результата:
1. Сбор данных: Собрать требования в тексте
2. Подготовка запроса: Сформулировать запрос
3. Использование ChatGPT: Отправить запрос
4. Анализ и корректировка: Проверить, не упущено ли что-то важное из исходного текста
5. Использование результата: Использовать для дальнейшей работы с требованиями и формулировки user stories

Плюсы, минусы, важные особенности:
Не отменяет внимательное чтение требований, но может сократить время на какое-то описание задачи или демо команде.'),
       (NOW(), 'НейроNetки', 1, 'User Stories',
        'https://docs.google.com/document/d/1foU8BV48TnJUJonOvH3koUYTtS1Fg1pBfQYvYHjQ2No/edit#heading=h.fiqe4t32urmd', 'Использование ChatGPT для генерации user stories

Шаги достижения результата:
1. Сбор данных: Приготовить краткую формулировку требований из прошлой практики
2. Подготовка запроса: Сформулировать запрос
3. Использование ChatGPT: Отправить запрос
4. Анализ и корректировка: Проверить результат, сгенерировать еще пару вариантов ответов, перевести результат на русский
5. Использование результата: Использовать для проектирования решения и формулировки критериев приемки

Плюсы, минусы, важные особенности:
Дает идеи для развития решения. На русском формулирует туговато, переводит с английского медленно'),
       (NOW(), 'НейроNetки', 1, 'Acceptance criteria',
        'https://docs.google.com/document/d/1UTzGt1KUqguKw3GSPQ9manlfZQyR_woBf-yZWh7mLsQ/edit#heading=h.t4i36d3g9rq3', 'Использование ChatGPT для генерации критериев приемки user story

Шаги достижения результата:
1. Сбор данных: Приготовить user story
2. Подготовка запроса: Сформулировать запрос
3. Использование ChatGPT: Отправить запрос
4. Анализ и корректировка: Проверить результат, переформулировать запрос при необходимости
5. Использование результата: Использовать в описаниях задач

Плюсы, минусы, важные особенности:
Формирует не по правилам и не всегда логичные критерии, но можно использовать как источник идей и для самопроверки'),
       (NOW(), 'НейроNetки', 1, 'Таблица сочетаний',
        'https://docs.google.com/document/d/1g2ItVrqs42kuOJ0HIXS0NQmzcIuhE1SANoo1h3hA4os/edit#heading=h.9mqu6xw19rr7', ' При помощи ChatGPT сгенерировать таблицу со всеми вариантами сочетаний условий,
        которую затем можно будет дополнить описанием результата для каждого сочетания.

Шаги достижения результата:
1. Сбор данных: Собрать варианты значений параметров для задачи
2. Подготовка запроса: Сформулировать запрос
3. Использование ChatGPT: Отправить запрос
4. Анализ и корректировка: Убрать лишние столбцы, которые ChatGPT заполняет чем бог на душу положит
5. Использование результата: Использовать для анализа и описания бизнес-правил

Плюсы, минусы, важные особенности:
В теории - заменяет рутинную ручную работу по копипасте этих значений. На практике только частично решает задачу'),
       (NOW(), 'ГосНейроз', 4, 'Создание конфигов nginx',
        'https://docs.google.com/document/d/16ETN4z45BPrEogbl6ChFHBJUL4klENtlwbE-wUg7iyo/edit?usp=sharing', 'Генерация конфигурационных файлов и получение советов по установке и настройке nginx

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы получить советы по настройке и некоторые конфиги.
Например: “Привет. Ты системный администратор тебе нужно развернуть reverse proxy на nginx”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.
3. Анализ результата: Удовлетворяет ли потребности?
4. Корректировка: При необходимости усточнить задачу, например: “добавь к этому конфиг файлу балансировщик нагрузки”.
5. Использование результата: Использовать на сервере с nginx'),
       (NOW(), 'ГосНейроз', 4, 'Настройка LDAP (в Nexus)',
        'https://docs.google.com/document/d/1kMjXprXvKLuF4vyyU_IQxAK4cqYXoAxqyvMOow8hBAA/edit?usp=sharing', 'Генерация выражений для настройки LDAP в диалоге с ChatGPT,
        вместе с сопутствующей справочной информацией.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы получить советы по настройке и некоторые конфиги. Например: “Привет! представь что ты системный администратор.
у тебя есть ldap сервер в котором есть две группы
- users_dev
- users_prod
тебе нужно настроить Nexus так чтобы в него могли войти только администратор (не ldap) и пользователи ldap группы users_prod.
как ты это сделаешь?”
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.
3. Анализ результата: Удовлетворяет ли потребности?
4. Корректировка: В случае, если нас что-то не устроило, уточняем запрос
5. Использование результата: Использовать полученные выражения для настройки LDAP'),
       (NOW(), 'ГосНейроз', 3, 'Генерация тестовых данных БД в виде YAML',
        'https://docs.google.com/document/d/1SQZPLQaLXJFh1pN3Kr5j7JRMfWVYE9bF/edit?usp=share_link&ouid=116051405619444286676&rtpof=true&sd=true', 'В нашим проекте используется интеграционное тестирование БД при помощи библиотеки database-rider. Эта библиотека позволяет вставлять в БД тестовые данные из YAML-файлов,
        а также сравнивать состояние БД с данными в YAML. При помощи ChatGPT создаем заготовки тестовых наборов данных по описанию таблицы.

Шаги достижения результата:
1. Сбор данных:  Взять описание таблицы в виде DDL-скрипта.
2. Подготовка запроса: Сформулировать запрос с описанием необходимой структуры YAML-файла,
        например: “Составь пожалуйста YAML с данными для этой таблицы. Не заполняй необязательные поля и поля,
        имеющие дефолтное значение. Таблицу в YAML отобрази в виде именованного списка,
        название таблицы становится названием именованного списка, каждая запись в таблице - элементом списка”
3. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса.
4. Анализ и корректировка результата:
- Если есть таблицы, связанные через FOREIGN KEY, для них нужно тоже сгенерировать данные. Затем ключи связи нужно проставить в описанные ранее таблицы.
- Скорректировать тестовые данные для достижения целей конкретного тестового метода.
5. Использование результата: Добавляем в проект YAML-файлы с полученным содержимым.'),
       (NOW(), 'ГосНейроз', 3, 'Генерация тестов для REST-контроллеров',
        'https://docs.google.com/document/d/1an60tSqSRlQvxXpXxN3WS03BRECTtnd2/edit?usp=share_link&ouid=116051405619444286676&rtpof=true&sd=true', 'Генерируем тесты по исходному коду REST-контроллера при помощи ChatGPT

Шаги достижения результата:
1. Сбор данных:  Взять исходный код тестируемого REST-контроллера.
2. Формирование запроса: Добавить к исходному коду формулировку задачи, например: “Привет,
        считай что ты java-разработчик и используешь spring и spring-boot фреймворк и у тебя сверхспособности к написанию лучших тестов для REST контроллеров. Ты очень любишь всё мокать с помощью Mockito и поднимать spring контекст для тестового окружения. и тебе дали следующий контроллер,
        для которого тебе надо написать тесты …”
3. Использование ChatGPT: Передать запрос в ChatGPT.
4. Анализ и корректировка результата: Проверить сгенерированный код на валидность путем его исполнения, при необходимости самостоятельно внести корректировки в код или уточнить детали для ChatGPT и попросить дополнить.
5. Использование результата: Добавить в проект полученные тесты.'),
       (NOW(), 'ГосНейроз', 1, 'Формирование спецификации по определенному заданию',
        'https://docs.google.com/document/d/1oFCuiKEqL2sLzImU39lRFAQOoZfkzAVO/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT для создания спецификации.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы сгенерировать спецификацию. Например: “Представь,
        ты - системный аналитик в разработке ПО. Есть веб-приложение, которым пользуется посетитель читального зала библиотеки. В системе у пользователя имеется личный кабинет. Читальный зал работает заранее определенными периодами (например с 10 до 12 и с 12 до 14). Пользователь должен иметь возможность самостоятельно записаться в читальный зал на определенный промежуток времени.
Составь спецификацию для разработчика. Не описывай авторизацию и вход в личный кабинет. Только процесс записи в читальный зал”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить предложенную спецификацию
4. Корректировка: При необходимости, внести корректировки в предложенную спецификацию самостоятельно или уточнить запрос для ChatGPT.
5. Использование результата: Дополнить описание макетами интерфейса и использовать в разработке. '),
       (NOW(), 'ГосНейроз', 1, 'Формирование описания интерфейса окна',
        'https://docs.google.com/document/d/1TpWOkM0reK7nEEfUalfXCBA9W3mjgubZ/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT для создания описания интерфейса окна на основании описания функционала окна.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT,
        чтобы сгенерировать описание интерфейса окна. Например: “Представь, ты системный аналитик в разработке ПО. Сотрудник библиотеки должен иметь возможность просматривать кто записан в читальный зал и на какое время. Читальный зал работает определенными периодами (например с 10 до 12 и с 12 до 14). Придумай интерфейс окна”.
Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
2. Анализ результата: Проверить предложенное описание интерфейса
3. Корректировка: При необходимости,
        внести корректировки в предложенное описание интерфейса самостоятельно или уточнить запрос для ChatGPT,
        например: “Записи должны быть сгруппированы по времени. Т.к. есть ограничение на количество людей одновременно находящихся в читальном зале”.
4. Использование результата: На основании полученного результата создать макет окна и использовать его в спецификации.'),
       (NOW(), 'ГосНейроз', 1, 'Написание краткой аннотации по тексту описания, доклада, статьи',
        'https://docs.google.com/document/d/1d7MUygIHtMOaYEP-YAof9hfz5u9jphdl/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Выделение и формулирование краткой аннотации по большому объему текста: описание,
        доклад, статья и т.п.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст описания, доклада, статьи.Сформулировать запрос для ChatGPT на генерацию аннотации.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить предложенную аннотацию.
4. Корректировка: При необходимости можно уточнить запрос, например, уточнить цель аннотации, для разных целей можно получить разные формулировки и сравнить их. При необходимости самостоятельно скорректировать текст.
5. Использование результата: Использовать полученную аннотацию для публикации, отчета, переписки, иных целей.'),
       (NOW(), 'Hello_нейроWorld', 3, 'Практика №4
Использование ChatGPT для оптимизации проверок и первичной оценки рисков',
        'https://docs.google.com/document/d/1CEeG5yCTgi09RFucXPEog3Gc0-XdKNfaYpxjXj8nQk8/edit', 'После того,
        как мы получили список проверок, нам может понадобиться его оптимизировать - крайне актуально в условиях сжатых сроков.
Также имеет смысл провести первичную оценку рисков - это поможет проверить наиболее критичные моменты в начале тестирования.

Шаги достижения результата:
1.       Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы оптимизировать ранее сгенерированный (либо уже существующий) список проверок.
2.        Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT для отправки запроса и получения предложенного варианта
3.       Анализ результата: Проверить предложенный список проверок
4.       Корректировка: при необходимости, внести корректировки в словесное описание задачи
5.       Подготовка последующего запроса для оценки рисков тестовых случаев
6.       Анализ результата: Проверить предложенный список проверок, при необходимости скорректировать запрос либо результат
7.       Использование результата: осуществить тестирование по сгенерированному списку'),
       (NOW(), 'Hello _нейроWorld', 2, 'Генерация процедуры для выполнения миграции данных в Postgresql',
        'https://docs.google.com/document/d/1mPlJPDoY81R7TWe3gyig2UPzSAtx9POJvLPfSyGjwVM/edit', 'Использование ChatGPT для генерация кода,
        выполняющего миграцию данных в Postgresql, например: при изменении структуры базы данных.

Шаги достижения результата
1. Сбор данных: получаем DDL для таблиц Postgresql по которым необходимо выполнить миграцию данных
2. Подготовка запроса: передаем полученный DDL в ChatGPT и просим нейросеть сгенерировать процедуру для миграции данных
3. Анализ результата: смотрим на предложенный результат, при необходимости уточняем требования к процедуре
4. Использование результата: выполняем миграцию данных с помощью полученной процедуры'),
       (NOW(), 'НейроNetки', 1, 'Генерация задач в Jira',
        'https://docs.google.com/document/d/15NSRlh-04S878xRwH6-tVSOI7uttiGS84842j0rj1lk/edit#heading=h.fiqe4t32urmd', 'При помощи ChatGPT сгенерировать json с параметрами задач для отправки запросов на создание задач в Jira

Шаги достижения результата:
1. Сбор данных: Собрать список полей, которые необходимо заполнить в создаваемых задачах, со всеми значениями, и формулировки для Description
2. Подготовка запроса: Сформулировать запрос
3. Использование ChatGPT: Отправить запрос
4. Анализ и корректировка: Просмотреть результат, по необходимости уточнить запрос (почему-то с первого раза написал дескрипшены на английском)
5. Использование результата: Вставить в запросы и запустить команду создания задач

Плюсы, минусы, важные особенности:
Работает. Вероятно, можно усложнить запрос - заставить сформулировать и включить в задачу заодно и критерии приемки или создать новые поля'),
       (NOW(), 'ГосНейроз', 4, 'Создание Helm Template из манифеста',
        'https://docs.google.com/document/d/17Y4arkl0b0dGc_AfbaWq0z8rvXfi-CR0cbngu9nhLd8/edit?usp=sharing', 'Генерация шаблонов Helm из существующих манифестов.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы получить советы по настройке и некоторые конфиги.
Например: “представь что ты devops инженер. создай на основе манифеста:
- шаблон файла deployment.yaml для helm chart
- файл values.yaml с переменными которые можно из него извлечь
желательно использовать циклы для повторяющихся элементов и списков. манифест ниже”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.
3. Анализ результата: Удовлетворяет ли потребности?
4. Корректировка: при необходимости можно модифицировать исходный запрос: “желательно использовать циклы для повторяющихся элементов и списков”.
5. Использование результата: преобразование k8s манифестов в helm шаблоны. (например в случае репозитория k8s-deployment)'),
       (NOW(), 'ГосНейроз', 4, 'Создание простых Jenkins Pipeline',
        'https://docs.google.com/document/d/1IDUkrOb9uk1nGnuN3P3hB5KuGLkRaToJFL34VkEmkVc/edit?usp=sharing', 'Генерация простых jenkins Pipeline.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT, чтобы получить советы по настройке и некоторые конфиги.
Например: “представь что ты devops инженер.
у тебя есть git репозиторий с исходным кодом helm чарта
тебе нужно написать jenkins pipeline чтобы этот helm чарт выкладывать в nexus”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения предложенного названия метода.
3. Анализ результата: Удовлетворяет ли потребности?
4. Корректировка: При необходимости уточнить, например: “удобнее когда pipeline содержит переменные”.
5. Использование результата: Cократить время при рутинном написании Jenkins Pipeline.'),
       (NOW(), 'ГосНейроз', 3, 'Список проверок по описанию системы',
        'https://docs.google.com/document/d/13kd8J8G8lV4boTRBNjzKtrqFW5SZ6m2d/edit', 'Получение списка возможных проверок по описанию возможностей системы (задачи, модуля, услуги и т.п.).

Шаги достижения результата:
1. Подготовка запроса: Передать на вход текст с описанием возможностей системы (задачи, модуля, услуги и т.п.). Сформулировать запрос для ChatGPT на подготовку чек-листа возможных проверок по этому описанию.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить сгенерированный список проверок.
4. Корректировка: При необходимости уточнить запрос, указав назначение проверок и т.п. При необходимости уточнить исходный текст.
5. Использование результата: При составлении планов, сценариев тестирования, отчетов.'),
       (NOW(), 'ГосНейроз', 5, 'Группировка документов из контрольной карты (КК) для сдачи по датам',
        'https://docs.google.com/document/d/13kd8J8G8lV4boTRBNjzKtrqFW5SZ6m2d/edit', 'Есть контрольная карта (КК),
        в которой вразнобой перечислены документы по ГК и сроки сдачи каждого документа. Количество документов - десятки. Цель практики - использовать ChatGPT для группировки / упорядочивания документов,
        например, по дате сдачи.

Шаги достижения результата:
1. Подготовка запроса: Передать на вход исходные данные (КК). Сформулировать запрос для ChatGPT на группировку / упорядочивание документов.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить группировку / упорядочивание документов.
4. Корректировка: При необходимости уточнить запрос. Как правило, не требуется.
5. Использование результата: При планировании сроков сдачи документов.'),
       (NOW(), 'ГосНейроз', 2, 'Иногда требуется написать небольшую утилиту…',
        'https://docs.google.com/document/d/1TgBjjQDUWYgqoN1SJe4nBwqoYBaU_QNz/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Иногда требуется написать небольшую утилиту,
        фактически одноразовую, что - то проверить или что-то протестировать, язык программы не принципиален,
        поэтому можно воспользоваться python из-за его минимализма кода. Например,
        нам надо оценить время работы сервиса морфера, сколько в среднем обрабатывается один запрос.

Шаги достижения результата:
1. Формулирование цели: Определим назначение утилиты.
2. Подготовка данных: Приготовим файлики, если они есть.
3. Взаимодействие с ChatGPT:  Сформируем начальный контекст для ввода ChatGPT в проблематику задачи, подскажем ему, что надо делать и попросим сгенерировать результат.
4. Корректировка: В процессе общения с ChatGPT корректируем и уточняем для более точного решения задачи.
5. Использование результата: Создаем файлик python, устанавливаем требуемые зависимости и можем пользоваться по назначению.'),
       (NOW(), 'ГосНейроз', 3, 'Генерация граничных значений для тестирования',
        'https://docs.google.com/document/d/1vYrCNGD_z4Tb_ADu1hMjxAJK589gv1Fu/edit?usp=sharing&ouid=116051405619444286676&rtpof=true&sd=true', 'Использование ChatGPT для генерации граничных значений,
        проверяемых при тестировании.

Шаги достижения результата:
1. Подготовка запроса: Сформулировать запрос для ChatGPT,
        чтобы сгенерировать граничные значения для проведения тестирования. Например: “Представь,
        что ты тестировщик в разработке ПО. Есть поле для ввода возраста пользователя, которое может принимать значения от 0 до 120.
Напиши, какие граничные значения нужно проверять при тестировании этого поля”.
2. Использование ChatGPT: Воспользоваться пользовательским интерфейсом ChatGPT-3.5 (или бота) для отправки запроса и получения ответа.
3. Анализ результата: Проверить предложенные граничные значения
4. Корректировка: при необходимости, уточнить запрос для ChatGPT-3.5,
        например: “Напиши конкретные значения которые нужно использовать при проверке”, или обратиться в ChatGPT-4, или внести корректировки самостоятельно.
5. Использование результата: на основании полученного результата проводим тестирование для проверки граничных значений.'),
       (NOW(), 'Нейроштурм', 1, 'Генерация вопросов для проведения интервью',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.cth94om4wqlf', 'При помощи ChatGPT сформировать список вопросов для интервью с заказчиком

Шаги достижения результата:
Задать контекст проблемы задчи
Попросить ChatGPT  сформировать список вопросов
Проанализировать результат, попросить дополнить, раскрыть темы
На основе ответов ChatGPT сформировать обощенный список вопросов для интервью'),
       (NOW(), 'Нейроштурм', 1, 'Генерация текста письма для заказчика',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.iaaw1m9hwcn', 'При помощи ChatGPT сгенерировать текст письма для заказчика.

Шаги достижения результата:
Задать контекст
Попросить сгенерировать письмо'),
       (NOW(), 'Нейроштурм', 1, 'Интервью наоборот',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.6odmkozbmuve', 'Посмотреть на работу синтетического системного-аналитика,
        предоставив возможность ChatGPT провести интервью.
Основано на реальном входном задании для аналитиков.

Шаги достижения результата:
Попросить побыть ChatGPT в роли аналитика
Задать контекст
Самому представиться заказчиком
Попросить ChatGPT провести интервью'),
       (NOW(), 'Нейроштурм', 1, 'Аналитика поисковых запросов',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.sz8hls6iemg9', 'Сформировать общее понимание тем поисковых запросов,
        процентное соотношение.
Понимание тем поисковых запросов может дать понимание и к настройке поисковой системы и к размещаемым документам.

Шаги достижения результата:
Передать ChatGPT поисковые запросы
Попросить сформулировать темы и процентное соотношение'),
       (NOW(), 'Нейроштурм', 1, 'Формирование описания экранов',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.ufnjzcmmpq1', 'Попросить сформировать описание экранов

Шаги достижения результата:
Задать контекст
Попросить сформировать описание экранов
Попросить уточнить требования
Попросить сформировать описания экранов по уточненным требованиям'),
       (NOW(), 'Нейроштурм', 2, 'Проектирование REST API в формате OpenAPI Spec для дальнейшей кодогенерации',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.pi4jb8fd50fq', 'Использование ChatGPT для проектирования REST API. На выходе получаем описание REST API в формате OpenAPI Spec,
        которое используется в дальнейшем для генерации кода серверной и клиентской частей при помощи Swagger Editor либо ChatGPT

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для генерации REST API в формате OpenAPI Spec,
        соответствующие требованиям. Например: Необходимо создать REST API для работы с пользователями в формате OpenAPI Spec. Api должно содержать следующие возможности: создание,
        удаление, получение, обновление.Пользователь должен содержать следующую информацию: идентификатор, фамилию, имя,
        отчество, email, логин, пароль
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного REST API в формате OpenAPI Spec.
Анализ и корректировка: Загрузить полученный результат в Swagger Editor и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
Сгенерировать код. В Swagger Editor сгенерировать код серверной и клиентской части либо продолжить генерацию а ChatGPT.'),
       (NOW(), 'Нейроштурм', 2,
        'На основе OpenAPI Spec документа реализация Spring Boot приложения с использованием требуемых технологий',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.mwmcjgf6xylm', 'Использование ChatGPT для реализации Spring Boot приложения. На выходе получаем готовый код Spring Boot приложения,
        который переносится в IDE для дальнейшего развития и изменения либо контекст для дальнейшей работы CharGPT

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT. Например: Действуй как java developer. Есть OAS документ. Тебе на его основе необходимо создать приложение на Spring Boot с использованием Spring Web,
        Spring Data JPA. Вот содержимое OAS документа:
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного кода на Java.
Анализ и корректировка: Загрузить полученный результат в IDE и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.'),
       (NOW(), 'Нейроштурм', 2, 'Написание тестов на REST API с использованием библиотеки REST Assured',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.d3rgsjm6zu6f', 'Использование ChatGPT для написания тестов на REST API. На выходе получаем тесты на REST API с использованием нужных библиотек

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для генерации тестов на REST API, соответствующие требованиям. Например: действуй как java developer. Тебе необходимо написать тесты для RestController из готового Spring Boot приложения
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированных тестов на REST API.
Анализ и корректировка: Загрузить полученный результат в IDE и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.'),
       (NOW(), 'Нейроштурм', 2, 'Разъяснение кода',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.nk3dzvp9yuzf', 'Использование ChatGPT для повышения уровня компетенции разработчика.

Шаги для достижения результатов:
Подготовка запроса: Формирование запроса в строке ввода ChatGPT с содержанием кода, требующего разъяснение и фразой,
        содержащей просьбу дать разъяснение предоставленного кода.
Анализ и корректировка: Уточнение запроса с указанием пунктов, требующих дополнительное разъяснение.'),
       (NOW(), 'Нейроштурм', 2, 'Проведение Код-ревью',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.pmvsq5xxajzw', 'Использование ChatGPT для Проведение код-ревью. На выходе получаем список ошибок и вариант их исправления.

Шаги достижения результата:
Подготовка запроса: Сформулировать запрос для ChatGPT следующим образом:
“Можешь провести код-ревью и указать на ошибки: ” далее указывается фрагмент кода, которые необходимо проверить.
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получить корректировки по коду
Анализ и корректировка:  При необходимости задать уточняющий вопрос или попросить переписать фрагмент кода с рекомендациями,
        которые написал сам GPT'),
       (NOW(), 'Нейроштурм', 3, 'Составление тест-кейсов на основе описания технических решений',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.p7cga995f5ig', 'Использование нейросети ChatGPT для помощи в разработке тест-кейсов на основе указанных в пояснительной записке технических решений.
Шаги достижения результата:
Подготовка запроса: Разбивка описания технических решений на запросы для ChatGPT с уточнением технических необходимых требований.
Использование ChatGPT: отправка подготовленного запроса и получение ответа от ChatGPT.
Анализ и корректировка: анализ правильности полученного ответа, формирование и отправка уточняющих запросов к нейросети.
Использование результата: проведение тестирования в соответствии с сформированными тест-кейсами.'),
       (NOW(), 'Нейроштурм', 3, 'Генерация unit-тестов',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.s7pgtrc43mse', 'Генерация unit-тестов с помощью ChatGPT по запросу,
        содержащему тестируемый класс.

Шаги достижения результата:
Подготовка запроса: Составление запроса с указанием тестируемого класса и библиотек, используемых при тестировании.
Использование ChatGPT: отправка подготовленного запроса и получение ответа от ChatGPT.
Анализ и корректировка: анализ правильности полученного ответа,
        формирование и отправка уточняющих запросов к нейросети. Корректировка запроса с учетом используемых в тестируемом методе сущностей,
        уточнение тестируемых методов.
Использование результата: Включение сгенерированного нейросетью кода в тестовые классы.'),
       (NOW(), 'Hello_НейроWorld', 4, 'Генерация конфигурации для Nginx',
        'https://docs.google.com/document/d/1-erhMqD0G-uajl4PKrAte6912xbHlwLHv8FCWJ4fsTg/edit', 'Использование ChatGPT для настройки и генерация конфигурации Nginx,
        на примере генерации конфигурации для включения логирования всех HTTP DELETE запросов.

Шаги достижения результата
1. Подготовка запроса: определите требования к конфигурации Nginx, например: версию, определения доменных имен и портов,
        а также определение параметров безопасности и производительности. Отправьте запрос в ChatGPT и дождитесь ответа.
2. Анализ результата: проанализируйте полученный результат. Убедитесь,
        что он соответствует требованиям и целям. Если вы обнаружите какие-то проблемы или неточности,
        попробуйте сформулировать запрос еще раз, используя более конкретные и точные параметры.
3. Проверка: перед тем, как использовать сгенерированную конфигурацию Nginx, убедитесь, что она не содержит ошибок. Можно провести проверку с помощью инструмента nginx -t. Это позволит обнаружить любые синтаксические и логические ошибки в конфигурации.
4. Использование результата: после того, как удалось убедиться в корректности конфигурации,
        ее можно использовать в вашем проекте. Для этого скопируйте конфигурационный файл в соответствующую директорию на сервере и перезапустите Nginx,
        чтобы изменения вступили в силу.'),
       (NOW(), 'Hello_НейроWorld', 4, 'Генерация Python скриптов для автоматизации процесса администрирования GitLab',
        'https://docs.google.com/document/d/1qe6FA1YchIkm-g2yZJNbm60rJ9G9W6jifMPEXTyTa5M/edit#heading=h.tlyb7b67avv9', 'Использование ChatGPT для генерация Python скриптов,
        позволяющих облегчить и автоматизировать процесс администрирования GitLab, на примере генерации Python скрипта для удаления старых веток из GitLab репозитория.

Шаги достижения результата
1. Подготовка запроса: подготовьте требования к Python скрипту, отправьте запрос в ChatGPT и дождитесь ответа.
2. Анализ результата: проанализируйте сгенерированный скрипт, поправьте переменные и установите необходимые пакеты с помощью менеджера PIP.
3. Проверка: проверьте предложенный скрипт на тестовом репозитории
4. Использование результата: запустите полученный скрипт на рабочем стенде.'),
       (NOW(), 'Hello_НейроWorld', 4, 'Генерация bash скриптов для автоматизированного резервного копирования БД',
        'https://docs.google.com/document/d/1c3OL6yxOvWQDIEEC2FsVH1p_FHzq3InjRRjbhGyozcM/edit#heading=h.tlyb7b67avv9', 'Использование ChatGPT для генерация Bash скриптов,
        автоматизирующих процесс резервного копирования баз данных.

Шаги достижения результата
1. Подготовка запроса: подготовьте и передайте в ChatGPT запрос на генерацию необходимого скрипта, дождитесь ответа
2. Анализ результата: проанализируйте сгенерированный скрипт и поправьте параметры подключения к БД
3. Проверка: проверьте полученный bash скрипт на предмет ошибок и убедитесь, что он соответствует вашим требованиям. Можно запустить скрипт в тестовом режиме и проверить его работоспособность.
4. Использование результата: используйте полученный bash скрипт на рабочем стенде'),
       (NOW(), 'Нейроштурм', 3, 'Подготовка тестовых данных',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.lxhcoe9gcdg4', 'Подготовка тестовых данных с помощью ChatGPT для использования в тестировании.

Шаги достижения результата:
Подготовка запроса: Составление запроса с указанием сущности, тестовые данные которой необходимо сгенерировать.
Использование ChatGPT: отправка подготовленного запроса и получение ответа от ChatGPT.
Анализ и корректировка: анализ правильности полученного ответа, формирование и отправка уточняющих запросов к нейросети.
Использование результата: Включение сгенерированного нейросетью кода в тестовые методы.'),
       (NOW(), 'Нейроштурм', 3, 'Генерация тестовой базы данных в формате yml',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.dh27zy77no53', 'С помощью ChatGPT сгенерировать yml файл,
        содержащий тестовые данные БД для проведения интеграционного тестирования класса-репозитория.

Шаги достижения результата:
Подготовка запроса: Составление запроса с указанием схемы таблицы, для которой необходимо сгенерировать тестовые данные,
        указанием формата необходимого файла. Можно уточнить атрибуты, которые должны быть заполнены обязательно и исключить ненужные поля.
Использование ChatGPT: отправка подготовленного запроса и получение ответа от ChatGPT.
Анализ и корректировка: анализ правильности полученного ответа, формирование и отправка уточняющих запросов к нейросети. При необходимости- корректировка запроса.
Использование результата: Включение сгенерированного нейросетью кода в тестовые классы.'),
       (NOW(), 'Нейроштурм', 3, 'Генерация запросов для тестирования API',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.vxi9wrni13j', 'Составление списка готовых запросов для тестирования API с помощью Postman.

Шаги достижения результата:
Подготовка запроса: Составить запрос для Chat GPT с указанием тестируемых URL и инструмента тестирования (Postman). В качестве уточнения можно использовать тестируемый класс-контроллер.
Использование Chat GPT: отправка подготовленного запроса и получение ответа от нейросети.
Анализ и корректировка: анализ правильности полученного ответа, формирование и отправка уточняющих запросов к нейросети. При необходимости- корректировка запроса.
Использование результата: Подставить сгенерированные URL и json-объекты в Postman, провести тестирование.'),
       (NOW(), 'Нейроштурм', 4, 'Создание Dockerfile для Spring Boot приложения, собранного при помощи Gradle',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.oz73vkrajm3e', 'Использование ChatGPT для создания Dockerfile для Spring Boot приложения. На выходе получаем готовый Dockerfile,
        который используется для создания Docker образа и последующего развертывания приложения.

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для создания Dockerfile,
        соответствующие требованиям. Например: Необходимо создать Dockerfile для Spring Boot приложения, собранного с помощью Gradle. Приложение собирать не нужно. Приложение должно быть доступно на порту 8080. Обеспечить корректное кэширование слоев при сборке Docker образа.
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного Dockerfile.
Анализ и корректировка: Проверить полученный Dockerfile на соответствие требованиям, и при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
Использование результата. Использовать полученный Dockerfile для создания Docker образа приложения, выполнив команду docker build.'),
       (NOW(), 'Нейроштурм', 4, 'Создание k8s deployment manifest при помощи ChatGPT',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.arvtn2swa5b0', 'Использование ChatGPT для создания k8s deployment manifest. На выходе получаем описание deployment manifest для развертывания приложения в k8s,
        которое можно использовать для деплоя приложения в кластере.

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для создания Dockerfile, соответствующие требованиям. Например: Необходимо создать k8s deployment manifest.
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного k8s deployment manifest
Анализ и корректировка: Проверить полученный результат на корректность и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
Использование результата: Использовать полученный deployment manifest для деплоя приложения в k8s кластер.'),
       (NOW(), 'Нейроштурм', 4, 'Оптимизация k8s deployment manifest при помощи ChatGPT',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.zs77jtp4tr4', 'Использование ChatGPT для оптимизации и создания k8s deployment manifest. На выходе получаем оптимизированный и структурированный k8s deployment manifest,
        который используется для развертывания приложения в Kubernetes.

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для создания или оптимизации k8s deployment manifest,
        соответствующие требованиям. Например: "Предложи изменения с учетом лучших практик для производственной среды для deploymen manifest. Manifest должен содержать следующие возможности: автомасштабирование,
        логирование, мониторинг.Ресурсы для каждого пода должны быть ограничены до 1 CPU и 2Gb RAM. Вот его содержимое:..."
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения оптимизированного k8s deployment manifest.
Анализ и корректировка: Проверить полученный результат на соответствие требованиям и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
Использование результата: Применить полученный k8s deployment manifest в k8s среде и проверить работоспособность приложения.'),
       (NOW(), 'Нейроштурм', 4, 'Создание sh скриптов при помощи ChatGPT',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.cdrvqsge40rs', 'Использование ChatGPT для создания sh скриптов. На выходе получаем готовый скрипт,
        который может быть использован для автоматизации различных задач на Unix-подобных системах.

Шаги достижения результата:
Подготовка запроса: Сформулировать инструкции для ChatGPT, для генерации sh скрипта, соответствующие требованиям. Например: "Напиши sh скрипт для поиска процесса занимающего порт"
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного sh скрипта.
Анализ и корректировка: Проверить полученный скрипт на соответствие требованиям и, при необходимости, внести корректировки или задать более точные запросы для ChatGPT.
Использование результата: Сохранить сгенерированный скрипт в файл с расширением .sh, сделать его исполняемым и запустить для выполнения задачи.'),
       (NOW(), 'Нейроштурм', 4,
        'Использование ChatGPT для генерации идей по оптимизации рабочих процессов и поиска новых решений',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.m96xteu7g5id', 'Использование ChatGPT для генерации новых идей и подходов,
        направленных на оптимизацию рабочих процессов и поиск решений.

Шаги достижения результата:
Подготовка запроса: Сформулировать запрос для ChatGPT,
        указывая контекст и цель оптимизации рабочих процессов или поиска новых решений. Например: "Напиши как сделать резервную копию postgres 11"
Использование ChatGPT: Воспользоваться ChatGPT для отправки сформулированных инструкций и получения сгенерированного Dockerfile.
Анализ и корректировка: Изучить полученные идеи и предложения,
        отобрать наиболее перспективные и релевантные для текущих задач и условий команды. При необходимости, задать дополнительные запросы для уточнения или расширения списка идей.
Использование результата: Внедрить отобранные идеи в рабочие процессы команды и оценить их эффективность, внося корректировки и адаптируя подходы при необходимости.'),
       (NOW(), 'Нейроштурм', 5, 'Подготовка заголовка аннотации доклада',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.ww06gzw4jgvq', 'При подготовке к докладу требуется придумать название и подготовить описание. Это можно подготовить с использованием ChatGPT

Шаги достижения результата:
Дать какую-то базовую информацию
Попросить ChatGPT задать вопросы для пониманимания о чем пойдет речь
Попросить ChatGPT сформировать название
Попросить ChatGPT сформировать описание'),
       (NOW(), 'Нейроштурм', 5, 'Подготовка текста для руководства пользователя на основе пояснительной записки',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.yaiizpyg0rkh', 'Сначала рождается пояснительная записка (ПЗ) в ней описываются проектные решения. Часть этих данных должна быть использована для подготовки руководства пользователя. Можно передать текст из пояснительной записки в ChatGpt для формирования РП.

Шаги достижения результата:
Дать контекст, передать текст ПЗ
Попросить сформировать текст для РП'),
       (NOW(), 'Нейроштурм', 5, 'Формирование логического описание БД на основе DDL (Quick documentation idea)',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.1s8pa1ua50p7', 'Если уже есть база данных,
        и в ней присутствую какие-то записи, то можно методом Reverse Engineering получить логическое описание БД / Таблицы с помощью ChatGPT

Шаги достижения результата:
Открыть в IDEA подключение к БД
Получить Quick documentation - DDL + примеры данных
Попросить ChatGPT на основе этих данных сформировать логическое описание БД
Попросить вывести результат в табличной форме'),
       (NOW(), 'Нейроштурм', 5, 'Умный перевод технического текста',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.f5pc1w2rp5s6', 'Есть консольная утилита. К ней идет описание.  В описании приведены параметры и описание параметров. Необходимо включить в документацию описание на русском. При этом параметры должны остаться на английском языке.

Шаги достижения результата:
Дать ChatGPT исходное английской описание
Попросить перевести, но с учетом того, что сами команды не переводим
Попросить вывести ответы в таблице'),
       (NOW(), 'Нейроштурм', 5, 'Выявление ошибок и неточностей в тексте, корректировка текста',
        'https://docs.google.com/document/d/1Qq2gGS2Kal380blsl2WxC8lYsjCEmwKDfty6ODX4HCI/edit#heading=h.hssa6t6gmyk', 'Зачастую текст содержит ошибки и неточности. Можно использовать ChatGPT для объяснения,
        что в тексте неверно и генерации исправленного текста

Шаги достижения результата:
Дать текст
Попросить пояснить за ошибки и неточности'),
       (NOW(), 'Hello_нейроWorld', 2, 'Генерация cron',
        'https://docs.google.com/document/d/180UZdgbTl9pNjImUtXY6P1NvQJICHGuEGcEQ0BWg-rk/edit#heading=h.e2fq4ut2bwf1', 'Использование ChatGPT для генерация cron

Шаги достижения результата
1. Сбор данных: у нас есть шедулер, нужно задать правило его срабатывания
2. Подготовка запроса: передаем требование к периодичности срабатывания шедулера в ChatGPT и просим сгенерировать cron
3. Анализ результата: смотрим на предложенный результат, при необходимости уточняем требования
4. Использование результата: используем сгенерированный cron'),
       (NOW(), 'Hello_НейроWorld', 4,
        'Генерация Ansible-vars файла для конфигурации LDAP из конфигурации существующего LDAP-сервера.',
        'https://docs.google.com/document/d/1RwjSena1yK2iKjEgDAJKCk423_aZZFVO7CUNrVnIJWM/edit', 'Ранее была написана Ansible-роль для конфигурирования записей в LDAP-сервере (пользователи, группы, прочие объекты и их атрибуты). Необходимо выгрузить текущую конфигурацию LDAP-сервера и занести её в ansible-inventory для дальнейшего редактирования конфигурации и применения подхода infrastracture as code.

Шаги достижения результата
1. Подготовка запроса: подготовьте требования к Python скрипту, отправьте запрос в ChatGPT и дождитесь ответа.
2. Анализ результата: проанализируйте сгенерированный скрипт, поправьте переменные и установите необходимые пакеты с помощью менеджера PIP.
3. Проверка: проверьте предложенный скрипт, сверив полученный результат выполнения скрипта с шаблоном.
4. Использование результата: внесите вывод скрипта в Ansible vars файл и воспроизведите ansible playbook.');
